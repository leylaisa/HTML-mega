 .class_name -> same style for multiple elements. For example: images all related to social media logos would have a class name .social

#id_nam -> unique style for an element. For ex: specifying the logo of GitHub among all other social media logos

Glassmorphism -> visual-design style that applies diff. levels of transparency to create frosted glass (aka blur) effectny creating depth & contrast btw fg & bg elements

best way to add captions to images (easier to find images on web engines):
<figure>
<img src=“a-man-coding.jpg” alt=“A man working on his computer”>
<figcaption> This is a picture of a man working on his computer</figcaption>
</figure>

The HTML5 specification says that the <b> and <i> tags should only be used as a last resort if no other tag is available. Use <strong>...</strong> & <em>...</em> instead,
or better, style in CSS

ABSOLUTE UNIT:
PX: Pixels (px) are considered absolute units, although they are relative to the DPI and resolution of the viewing device. 
But on the device itself, the PX unit is fixed and does not change based on any other element. Using PX can be problematic for responsive sites, 
but they are useful for maintaining consistent sizing for some elements. 
If you have elements that should not be resized, then using PX is a good choice.

RELATIVE UNITS:
EM: Relative to the parent element

REM: Relative to the root element (HTML tag)

%: Relative to the parent element

VW: Relative to the viewport’s width

VH: Relative to the viewport’s height
Unlike PX, relative units like %, EM, and REM are better suited to responsive design and also help meet accessibility standards. 
Relative units scale better on different devices because they can scale up and down according to another element’s size.

While PX, EM, and REM are primarily used for font sizing, %, VW, and VH are mostly used for margins, padding, spacing, and widths/heights.

 In general, it is often best to choose one of the relative units over PX so that your web page has the best chance of 
 rendering a beautifully responsive design. Choose PX however, if you need to ensure that an element never resizes at any breakpoint 
 and remains the same regardless of whether a user has chosen a different default size. PX units ensure consistent results 
 even if that’s not ideal.

EM is relative to the parent element’s font size, so if you wish to scale the element’s size based on its parent’s size, use EM.

REM is relative to the root (HTML) font size, so if you wish to scale the element’s size based on the root size, 
no matter what the parent size is, use REM. If you’ve used EM and are finding sizing issues due to lots of nested elements, 
REM will probably be the better choice.

VW is useful for creating full width elements (100%) that fill up the entire viewport’s width. Of course, 
you can use any percentage of the viewport’s width to achieve other goals, such as 50% for half the width, etc.

VH is useful for creating full height elements (100%) that fill up the entire viewport’s height. Of course, 
you can use any percentage of the viewport’s height to achieve other goals, such as 50% for half the height, etc.

% is similar to VW and VH but it is not a length that is relative to viewport’s width or height. 
Instead, it is a percentage of the parent element’s width or height. 
Percentage units are often useful to set the width of margins, as an example.

Elementor makes it easy to choose the option that is best suited for your design. Ultimately, it’s your choice.

Fractions:
The introduction of Container Grids brought a new unit of measurement called fractions (FR). 
Fraction represents the amount of space taken by a column or row as measured by the percentage of overall space it takes up. 
For instance, a fraction setting of two means the column(s) will take up 50% of the available space. 
This means that if you’re using the default measurements, 2FR means you’ll have two columns, 3FR three columns etc.